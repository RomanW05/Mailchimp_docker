version: '2.1'

services:
  postgres:
    container_name: postgres
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=mailchimp
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgres/data

  pgadmin:
    container_name: pgAdmin4
    image: dpage/pgadmin4:6.14
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=123
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    ports:
      - 5050:5050
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - ./create_database.py:/pgadmin4/create_database.py

  rabbitmq:
    container_name: RabbitMQ
    # image: rabbitmq:3.11.10
    image: rabbitmq:3.8.5-management
    # build:
    #   context: ./compose/rabbitmq
    #   dockerfile: ./Dockerfile
    ports:
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      retries: 3

  celery:
    container_name: Celery_worker
    build: ./app
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: celery -A tasks worker --loglevel=INFO
    

  # app:
  #   container_name: FastAPI
  #   build:
  #     context: ./app
  #     dockerfile: ./Dockerfile
  #   image: fastapi-service:dev
  #   depends_on:
  #       - rabbitmq
  #       - celery
  #   command: uvicorn api:app --host 0.0.0.0 --reload
  #   ports:
  #   - "8000:8000"
    
  #   stdin_open: true # docker run -i
  #   tty: true        # docker run -t


volumes:
  data: